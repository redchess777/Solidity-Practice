{
	"id": "c3cad194cef1614e9c8d84e41cf2d4b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\ncontract Loop {\r\n    function loop() public pure returns (uint256, uint256) {\r\n        uint256 numa;\r\n\r\n        for (uint256 i = 0; i < 10; i++) {\r\n            if (i == 3) {\r\n                continue;\r\n            }\r\n            if (i == 5) {\r\n                break;\r\n            }\r\n\r\n            numa = i;\r\n        }\r\n\r\n        uint256 j;\r\n        while (j < 10) {\r\n            j++;\r\n        }\r\n\r\n        return (numa, j);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "loop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":61:494  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":61:494  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa92100cb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":82:491  function loop() public pure returns (uint256, uint256) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap3\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":119:126  uint256 */\n      0x00\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":128:135  uint256 */\n      dup1\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":148:160  uint256 numa */\n      0x00\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":178:187  uint256 i */\n      dup1\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":190:191  0 */\n      0x00\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":178:191  uint256 i = 0 */\n      swap1\n      pop\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":173:378  for (uint256 i = 0; i < 10; i++) {... */\n    tag_9:\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":197:199  10 */\n      0x0a\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":193:194  i */\n      dup2\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":193:199  i < 10 */\n      lt\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":173:378  for (uint256 i = 0; i < 10; i++) {... */\n      iszero\n      tag_10\n      jumpi\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":230:231  3 */\n      0x03\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":225:226  i */\n      dup2\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":225:231  i == 3 */\n      sub\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":221:276  if (i == 3) {... */\n      iszero\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":252:260  continue */\n      tag_11\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":221:276  if (i == 3) {... */\n      jumpi\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":299:300  5 */\n      0x05\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":294:295  i */\n      dup2\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":294:300  i == 5 */\n      sub\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":290:342  if (i == 5) {... */\n      iszero\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":321:326  break */\n      tag_10\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":290:342  if (i == 5) {... */\n      jumpi\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":365:366  i */\n      dup1\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":358:366  numa = i */\n      swap2\n      pop\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":173:378  for (uint256 i = 0; i < 10; i++) {... */\n    tag_11:\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":201:204  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":173:378  for (uint256 i = 0; i < 10; i++) {... */\n      jump(tag_9)\n    tag_10:\n      pop\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":390:399  uint256 j */\n      0x00\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":410:455  while (j < 10) {... */\n    tag_14:\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":421:423  10 */\n      0x0a\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":417:418  j */\n      dup2\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":417:423  j < 10 */\n      lt\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":410:455  while (j < 10) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":440:443  j++ */\n      dup1\n      dup1\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      swap2\n      pop\n      pop\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":410:455  while (j < 10) {... */\n      jump(tag_14)\n    tag_15:\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":475:479  numa */\n      dup2\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":481:482  j */\n      dup2\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":467:483  return (numa, j) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":82:491  function loop() public pure returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_18:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_19:\n        /* \"#utility.yul\":177:201   */\n      tag_24\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_18\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:546   */\n    tag_7:\n        /* \"#utility.yul\":335:339   */\n      0x00\n        /* \"#utility.yul\":373:375   */\n      0x40\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":358:376   */\n      add\n        /* \"#utility.yul\":350:376   */\n      swap1\n      pop\n        /* \"#utility.yul\":386:457   */\n      tag_26\n        /* \"#utility.yul\":454:455   */\n      0x00\n        /* \"#utility.yul\":443:452   */\n      dup4\n        /* \"#utility.yul\":439:456   */\n      add\n        /* \"#utility.yul\":430:436   */\n      dup6\n        /* \"#utility.yul\":386:457   */\n      tag_19\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":467:539   */\n      tag_27\n        /* \"#utility.yul\":535:537   */\n      0x20\n        /* \"#utility.yul\":524:533   */\n      dup4\n        /* \"#utility.yul\":520:538   */\n      add\n        /* \"#utility.yul\":511:517   */\n      dup5\n        /* \"#utility.yul\":467:539   */\n      tag_19\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":214:546   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:732   */\n    tag_20:\n        /* \"#utility.yul\":600:677   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:678   */\n      mstore\n        /* \"#utility.yul\":697:701   */\n      0x11\n        /* \"#utility.yul\":694:695   */\n      0x04\n        /* \"#utility.yul\":687:702   */\n      mstore\n        /* \"#utility.yul\":721:725   */\n      0x24\n        /* \"#utility.yul\":718:719   */\n      0x00\n        /* \"#utility.yul\":711:726   */\n      revert\n        /* \"#utility.yul\":738:971   */\n    tag_17:\n        /* \"#utility.yul\":777:780   */\n      0x00\n        /* \"#utility.yul\":800:824   */\n      tag_30\n        /* \"#utility.yul\":818:823   */\n      dup3\n        /* \"#utility.yul\":800:824   */\n      tag_18\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":791:824   */\n      swap2\n      pop\n        /* \"#utility.yul\":846:912   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":836:913   */\n      sub\n        /* \"#utility.yul\":833:936   */\n      tag_31\n      jumpi\n        /* \"#utility.yul\":916:934   */\n      tag_32\n      tag_20\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":833:936   */\n    tag_31:\n        /* \"#utility.yul\":963:964   */\n      0x01\n        /* \"#utility.yul\":956:961   */\n      dup3\n        /* \"#utility.yul\":952:965   */\n      add\n        /* \"#utility.yul\":945:965   */\n      swap1\n      pop\n        /* \"#utility.yul\":738:971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205c4f27465fa16697e2ac1303db40273ad38caf187752d25298a99a8d51c8350964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101948061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063a92100cb1461002d575b5f80fd5b61003561004c565b6040516100439291906100c3565b60405180910390f35b5f805f805f90505b600a811015610080576003810315610073576005810315610080578091505b8080600101915050610054565b505f5b600a81101561009f57808061009790610117565b915050610083565b81819350935050509091565b5f819050919050565b6100bd816100ab565b82525050565b5f6040820190506100d65f8301856100b4565b6100e360208301846100b4565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610121826100ab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610153576101526100ea565b5b60018201905091905056fea26469706673582212205c4f27465fa16697e2ac1303db40273ad38caf187752d25298a99a8d51c8350964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43 SWAP3 SWAP2 SWAP1 PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x80 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x73 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0x80 JUMPI DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x54 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x9F JUMPI DUP1 DUP1 PUSH2 0x97 SWAP1 PUSH2 0x117 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x83 JUMP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD DUP2 PUSH2 0xAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD6 PUSH0 DUP4 ADD DUP6 PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x121 DUP3 PUSH2 0xAB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0xEA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TLOAD 0x4F 0x27 CHAINID PUSH0 LOG1 PUSH7 0x97E2AC1303DB40 0x27 GASPRICE 0xD3 DUP13 0xAF XOR PUSH24 0x52D25298A99A8D51C8350964736F6C634300081900330000 ",
							"sourceMap": "61:433:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loop_55": {
									"entryPoint": 76,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:974:1",
										"nodeType": "YulBlock",
										"src": "0:974:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "340:206:1",
													"nodeType": "YulBlock",
													"src": "340:206:1",
													"statements": [
														{
															"nativeSrc": "350:26:1",
															"nodeType": "YulAssignment",
															"src": "350:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "373:2:1",
																		"nodeType": "YulLiteral",
																		"src": "373:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "358:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:1"
																},
																"nativeSrc": "358:18:1",
																"nodeType": "YulFunctionCall",
																"src": "358:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "350:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "350:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "430:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "430:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "443:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "443:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "454:1:1",
																				"nodeType": "YulLiteral",
																				"src": "454:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "439:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "439:3:1"
																		},
																		"nativeSrc": "439:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "439:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "386:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "386:43:1"
																},
																"nativeSrc": "386:71:1",
																"nodeType": "YulFunctionCall",
																"src": "386:71:1"
															},
															"nativeSrc": "386:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "386:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "511:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "524:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "524:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "535:2:1",
																				"nodeType": "YulLiteral",
																				"src": "535:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "467:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "467:43:1"
																},
																"nativeSrc": "467:72:1",
																"nodeType": "YulFunctionCall",
																"src": "467:72:1"
															},
															"nativeSrc": "467:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "467:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "214:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "304:9:1",
														"nodeType": "YulTypedName",
														"src": "304:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "316:6:1",
														"nodeType": "YulTypedName",
														"src": "316:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "324:6:1",
														"nodeType": "YulTypedName",
														"src": "324:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "335:4:1",
														"nodeType": "YulTypedName",
														"src": "335:4:1",
														"type": ""
													}
												],
												"src": "214:332:1"
											},
											{
												"body": {
													"nativeSrc": "580:152:1",
													"nodeType": "YulBlock",
													"src": "580:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "597:1:1",
																		"nodeType": "YulLiteral",
																		"src": "597:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "600:77:1",
																		"nodeType": "YulLiteral",
																		"src": "600:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "590:6:1"
																},
																"nativeSrc": "590:88:1",
																"nodeType": "YulFunctionCall",
																"src": "590:88:1"
															},
															"nativeSrc": "590:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "590:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "694:1:1",
																		"nodeType": "YulLiteral",
																		"src": "694:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "697:4:1",
																		"nodeType": "YulLiteral",
																		"src": "697:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "687:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "687:6:1"
																},
																"nativeSrc": "687:15:1",
																"nodeType": "YulFunctionCall",
																"src": "687:15:1"
															},
															"nativeSrc": "687:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "687:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "718:1:1",
																		"nodeType": "YulLiteral",
																		"src": "718:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "721:4:1",
																		"nodeType": "YulLiteral",
																		"src": "721:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:6:1"
																},
																"nativeSrc": "711:15:1",
																"nodeType": "YulFunctionCall",
																"src": "711:15:1"
															},
															"nativeSrc": "711:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "711:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "552:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "552:180:1"
											},
											{
												"body": {
													"nativeSrc": "781:190:1",
													"nodeType": "YulBlock",
													"src": "781:190:1",
													"statements": [
														{
															"nativeSrc": "791:33:1",
															"nodeType": "YulAssignment",
															"src": "791:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "818:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "818:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:17:1"
																},
																"nativeSrc": "800:24:1",
																"nodeType": "YulFunctionCall",
																"src": "800:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "791:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "914:22:1",
																"nodeType": "YulBlock",
																"src": "914:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "916:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "916:16:1"
																			},
																			"nativeSrc": "916:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "916:18:1"
																		},
																		"nativeSrc": "916:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "916:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:66:1",
																		"nodeType": "YulLiteral",
																		"src": "846:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "836:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:2:1"
																},
																"nativeSrc": "836:77:1",
																"nodeType": "YulFunctionCall",
																"src": "836:77:1"
															},
															"nativeSrc": "833:103:1",
															"nodeType": "YulIf",
															"src": "833:103:1"
														},
														{
															"nativeSrc": "945:20:1",
															"nodeType": "YulAssignment",
															"src": "945:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "956:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "956:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "963:1:1",
																		"nodeType": "YulLiteral",
																		"src": "963:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "952:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:1"
																},
																"nativeSrc": "952:13:1",
																"nodeType": "YulFunctionCall",
																"src": "952:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "738:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "767:5:1",
														"nodeType": "YulTypedName",
														"src": "767:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "777:3:1",
														"nodeType": "YulTypedName",
														"src": "777:3:1",
														"type": ""
													}
												],
												"src": "738:233:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063a92100cb1461002d575b5f80fd5b61003561004c565b6040516100439291906100c3565b60405180910390f35b5f805f805f90505b600a811015610080576003810315610073576005810315610080578091505b8080600101915050610054565b505f5b600a81101561009f57808061009790610117565b915050610083565b81819350935050509091565b5f819050919050565b6100bd816100ab565b82525050565b5f6040820190506100d65f8301856100b4565b6100e360208301846100b4565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610121826100ab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610153576101526100ea565b5b60018201905091905056fea26469706673582212205c4f27465fa16697e2ac1303db40273ad38caf187752d25298a99a8d51c8350964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43 SWAP3 SWAP2 SWAP1 PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x80 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x73 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0x80 JUMPI DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x54 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x9F JUMPI DUP1 DUP1 PUSH2 0x97 SWAP1 PUSH2 0x117 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x83 JUMP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD DUP2 PUSH2 0xAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD6 PUSH0 DUP4 ADD DUP6 PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x121 DUP3 PUSH2 0xAB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0xEA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TLOAD 0x4F 0x27 CHAINID PUSH0 LOG1 PUSH7 0x97E2AC1303DB40 0x27 GASPRICE 0xD3 DUP13 0xAF XOR PUSH24 0x52D25298A99A8D51C8350964736F6C634300081900330000 ",
							"sourceMap": "61:433:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;82:409;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;119:7;128;148:12;178:9;190:1;178:13;;173:205;197:2;193:1;:6;173:205;;;230:1;225;:6;221:55;252:8;221:55;299:1;294;:6;290:52;321:5;290:52;365:1;358:8;;173:205;201:3;;;;;;;173:205;;;;390:9;410:45;421:2;417:1;:6;410:45;;;440:3;;;;;:::i;:::-;;;;410:45;;;475:4;481:1;467:16;;;;;;82:409;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:332::-;335:4;373:2;362:9;358:18;350:26;;386:71;454:1;443:9;439:17;430:6;386:71;:::i;:::-;467:72;535:2;524:9;520:18;511:6;467:72;:::i;:::-;214:332;;;;;:::o;552:180::-;600:77;597:1;590:88;697:4;694:1;687:15;721:4;718:1;711:15;738:233;777:3;800:24;818:5;800:24;:::i;:::-;791:33;;846:66;839:5;836:77;833:103;;916:18;;:::i;:::-;833:103;963:1;956:5;952:13;945:20;;738:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "80800",
								"executionCost": "127",
								"totalCost": "80927"
							},
							"external": {
								"loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 494,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c4f27465fa16697e2ac1303db40273ad38caf187752d25298a99a8d51c8350964736f6c63430008190033",
									".code": [
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 82,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 82,
											"end": 491,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 82,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 82,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 190,
											"end": 191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 193,
											"end": 194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 193,
											"end": 199,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 173,
											"end": 378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 173,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 230,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 225,
											"end": 231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 221,
											"end": 276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 252,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 221,
											"end": 276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 299,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 294,
											"end": 295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 290,
											"end": 342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 365,
											"end": 366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 358,
											"end": 366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 173,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 390,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 455,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 410,
											"end": 455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 417,
											"end": 418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 417,
											"end": 423,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 410,
											"end": 455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 410,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 410,
											"end": 455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 440,
											"end": 443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 440,
											"end": 443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 440,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 410,
											"end": 455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 455,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 410,
											"end": 455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 467,
											"end": 483,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 467,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 483,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 467,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 358,
											"end": 376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 350,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 439,
											"end": 456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 430,
											"end": 436,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 386,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 386,
											"end": 457,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 386,
											"end": 457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 520,
											"end": 538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 467,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 467,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 600,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 697,
											"end": 701,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 694,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 721,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 718,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 726,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 738,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 738,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 777,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 818,
											"end": 823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 800,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 791,
											"end": 824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 846,
											"end": 912,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 833,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 833,
											"end": 936,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 916,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 916,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 916,
											"end": 934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 936,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 833,
											"end": 936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 956,
											"end": 961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 952,
											"end": 965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 945,
											"end": 965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 945,
											"end": 965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 738,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"loop()": "a92100cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":\"Loop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol\":{\"keccak256\":\"0x66d2b839dc882be1c489a07a15a4b7efd9b41496657e3b2ee4e5232528dc9b1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://974f126a1fa986bb543beaf1e44b44b272c4f5a1fd3d9a0d07b64ef5f074853e\",\"dweb:/ipfs/QmWRba3vWKZ9QZSrZhzUBgyEXYhu1TM84WWvxm6tsPv6mB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol": {
				"ast": {
					"absolutePath": "default_workspace/contracts/solidity_by_example/011ForAndWhileLoop.sol",
					"exportedSymbols": {
						"Loop": [
							56
						]
					},
					"id": 57,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 56,
							"linearizedBaseContracts": [
								56
							],
							"name": "Loop",
							"nameLocation": "70:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "137:354:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "numa",
														"nameLocation": "156:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "148:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "148:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 10,
												"nodeType": "VariableDeclarationStatement",
												"src": "148:12:0"
											},
											{
												"body": {
													"id": 37,
													"nodeType": "Block",
													"src": "206:172:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 21,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "230:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "225:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 26,
															"nodeType": "IfStatement",
															"src": "221:55:0",
															"trueBody": {
																"id": 25,
																"nodeType": "Block",
																"src": "233:43:0",
																"statements": [
																	{
																		"id": 24,
																		"nodeType": "Continue",
																		"src": "252:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 27,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "294:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "299:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "294:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 32,
															"nodeType": "IfStatement",
															"src": "290:52:0",
															"trueBody": {
																"id": 31,
																"nodeType": "Block",
																"src": "302:40:0",
																"statements": [
																	{
																		"id": 30,
																		"nodeType": "Break",
																		"src": "321:5:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 33,
																	"name": "numa",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "358:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 34,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "365:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "358:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 36,
															"nodeType": "ExpressionStatement",
															"src": "358:8:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 15,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "193:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "197:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 38,
												"initializationExpression": {
													"assignments": [
														12
													],
													"declarations": [
														{
															"constant": false,
															"id": 12,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "186:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 38,
															"src": "178:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 11,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "178:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 14,
													"initialValue": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "190:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "178:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "201:3:0",
														"subExpression": {
															"id": 18,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ExpressionStatement",
													"src": "201:3:0"
												},
												"nodeType": "ForStatement",
												"src": "173:205:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "398:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "390:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 39,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"nodeType": "VariableDeclarationStatement",
												"src": "390:9:0"
											},
											{
												"body": {
													"id": 48,
													"nodeType": "Block",
													"src": "425:30:0",
													"statements": [
														{
															"expression": {
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "440:3:0",
																"subExpression": {
																	"id": 45,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "440:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 47,
															"nodeType": "ExpressionStatement",
															"src": "440:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 42,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "417:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "421:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "417:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "WhileStatement",
												"src": "410:45:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 50,
															"name": "numa",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 51,
															"name": "j",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "481:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 52,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "474:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 7,
												"id": 53,
												"nodeType": "Return",
												"src": "467:16:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "91:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "95:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "119:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "128:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:18:0"
									},
									"scope": 56,
									"src": "82:409:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 57,
							"src": "61:433:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:461:0"
				},
				"id": 0
			}
		}
	}
}